id,title,tests_total,tests_passed,tests_failed,tests_errors,correctness,complexity_avg,complexity_score,lint_issues,lint_score,security_issues,security_score,dep_vulns,dep_score,mutation_killed,mutation_total,mutation_score,aggregate_score
"{'id': 'task01', 'path': 'tasks/python/task01', 'title': 'Add Two Numbers', 'description': 'Implement add(a,b) that returns the sum.'}",Add Two Numbers,0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task02', 'path': 'tasks/python/task02', 'title': 'Reverse Words', 'description': 'reverse_words(s) returns words in reverse order.'}",Reverse Words,0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task03', 'path': 'tasks/python/task03', 'title': 'Palindrome Check', 'description': 'Implement is_palindrome(s) that returns True if s reads the same forwards and backwards, ignoring non-alphanumerics and case.'}",Palindrome Check,0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task04', 'path': 'tasks/python/task04', 'title': 'CSV Column Mean', 'description': 'Implement column_mean(path, col) that returns the mean of a numeric column in a CSV with a header row.'}",CSV Column Mean,0,0,0,0,0.000,4,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task05', 'path': 'tasks/python/task05', 'title': 'Safe Path Join', 'description': 'Implement safe_join(base, user_path) that returns a path inside base, rejecting traversal attempts.'}",Safe Path Join,0,0,0,0,0.000,3,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task06', 'path': 'tasks/python/task06', 'title': 'JSONL Sum by Key', 'description': ""sum_jsonl(path, key) sums numeric values for 'key' over JSON Lines; non-numeric/missing rows are ignored; empty result raises ValueError.""}",JSONL Sum by Key,0,0,0,0,0.000,6,0.900,0,1.000,0,1.000,,,,,,0.725
"{'id': 'task07', 'path': 'tasks/python/task07', 'title': 'Email Masker', 'description': 'mask_email(s) replaces the username part of emails with first and last char plus *** (e.g., john.doe@example.com -> j***e@example.com); case preserved for domain.'}",Email Masker,0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task08', 'path': 'tasks/python/task08'}",task08,0,0,0,0,0.000,11,0.400,0,1.000,0,1.000,,,,,,0.600
"{'id': 'task09', 'path': 'tasks/python/task09', 'title': 'Top-K Frequent Words', 'description': 'top_k_words(text, k) -> list of (word,count), case-insensitive, alnum tokens, ties broken by lexicographic asc.'}",Top-K Frequent Words,0,0,0,0,0.000,2,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task10', 'path': 'tasks/python/task10', 'title': 'YAML to JSON (Safe)', 'description': 'yaml_to_json(path) loads YAML with safe loader and returns canonical JSON string (sorted keys, compact separators).'}",YAML to JSON (Safe),0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task11', 'path': 'tasks/python/task11'}",task11,0,0,0,0,0.000,7.500,0.750,0,1.000,0,1.000,,,,,,0.688
"{'id': 'task12', 'path': 'tasks/python/task12', 'title': 'Directory Hash (Deterministic)', 'description': 'dir_hash(path) returns SHA256 over sorted relative file paths and contents; ignores directories; stable across runs.'}",Directory Hash (Deterministic),0,0,0,0,0.000,4,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task13', 'path': 'tasks/python/task13', 'title': 'Slugify', 'description': 'slugify(s) -> lowercased ASCII slug; strip accents, keep [a-z0-9-], collapse spaces/punct to single hyphens, and trim leading/trailing hyphens.'}",Slugify,0,0,0,0,0.000,1,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task14', 'path': 'tasks/python/task14', 'title': 'CSV Dedupe by Key (Keep Last)', 'description': 'dedupe_csv(in_path, out_path, key) writes rows keeping the last occurrence per key; preserves header; returns number of rows written; missing key raises KeyError.'}",CSV Dedupe by Key (Keep Last),0,0,0,0,0.000,4,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task15', 'path': 'tasks/python/task15', 'title': 'Safe Arithmetic Eval', 'description': 'safe_eval(expr) evaluates +,-,*,/,**, unary +/- and parentheses using ast; only numeric literals allowed; other nodes raise ValueError.'}",Safe Arithmetic Eval,0,0,0,0,0.000,5.500,0.950,0,1.000,0,1.000,,,,,,0.738
"{'id': 'task16', 'path': 'tasks/python/task16', 'title': 'Merge Intervals', 'description': 'merge_intervals(intervals) merges overlapping [start,end) integer intervals and returns a sorted list of merged intervals.'}",Merge Intervals,0,0,0,0,0.000,4,1.000,0,1.000,0,1.000,,,,,,0.750
"{'id': 'task17', 'path': 'tasks/python/task17', 'title': 'Natural Sort', 'description': 'natural_sort(items) sorts strings so numeric parts compare by value (e.g., file2 < file10); case-insensitive for letters.'}",Natural Sort,0,0,0,0,0.000,2.500,1.000,0,1.000,0,1.000,,,,,,0.750
__aggregate__,mean over 17 tasks,,,,,,,,,,,,,,,,,0.735
